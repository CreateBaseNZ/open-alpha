@import "variables";

* {
	margin: 0;
	padding: 0;
	border: none;
	outline: none;
	box-sizing: border-box;
	text-decoration: none;
	background: transparent;
	color: $darkest;
	font-size: 1rem;
	user-select: none;
}

html,
body {
	height: 100%;
	width: 100vw;
	max-width: 100vw;
	overflow-x: hidden;
	min-height: 100vh;
	background: $lightest;
	font-family: $poppins;
}

input,
textarea {
	-webkit-user-select: text;
	-moz-user-select: text;
	-ms-user-select: text;
	user-select: text;
}

button {
	cursor: pointer;
	font-family: $poppins;
}

svg {
	display: none;
}

.span {
	font-size: inherit;
	font-weight: inherit;
	font-style: inherit;
	color: inherit;
	font-family: inherit;
	letter-spacing: inherit;
}

.hide {
	max-height: 0;
	max-width: 0;
	overflow: hidden;
	visibility: hidden;
	pointer-events: none;
	opacity: 0;
}

.roundScrollbar {
	overflow-y: auto;
	&::-webkit-scrollbar {
		width: 12px;
	}
	&::-webkit-scrollbar-track {
		background: transparent;
	}
	&::-webkit-scrollbar-thumb {
		border-radius: 1rem;
		background: rgba(black, 0.1);
		transition: background-color 0.2s ease-out;
	}
	&::-webkit-scrollbar-thumb:hover {
		background: rgba(black, 0.2);
	}
	&::-webkit-scrollbar-thumb:active {
		background: rgba(black, 0.4);
	}
}

.react-flow__node.selected > div {
	box-shadow: 0 0 0 4px $amber;
}

.react-flow__handle-connecting:not(.react-flow__handle-valid) {
	z-index: 1;
	border-color: $red !important;
	background: $red !important;
	cursor: not-allowed !important;
}

.react-flow__handle-valid {
	border-color: $green-mid !important;
	background: $green-mid !important;
	&::after {
		background: $green-mid !important;
	}
}

.react-flow__arrowhead {
	polyline {
		stroke: $amber;
		fill: $amber;
	}
}

#react-flow__arrowclosed__custom {
	polyline {
		stroke: $logo-light;
		fill: $logo-light;
	}
}

.react-flow__edge {
	&.updating {
		path {
			stroke-width: 2 !important;
		}
	}
	&.selected {
		path {
			stroke: $logo-light !important;
			stroke-width: 3 !important;
		}
	}
}

.react-flow__edge.inactive * {
	pointer-events: none !important;
}

.react-flow__edge-execution {
	&.updating {
		path {
			stroke-width: 4 !important;
		}
	}
	&.selected {
		path {
			stroke: $logo-light !important;
			stroke-width: 4 !important;
			marker-end: url(#react-flow__arrowclosed__custom);
		}
	}
}

.monaco-editor * {
	font-family: $jetbrains;
}

.os-scrollbar {
	width: 12px !important;
}

.os-scrollbar-handle {
	border: thin solid rgba(white, 0.4);
	&:hover {
		border-color: rgba(white, 0.6);
	}
	&:active {
		border-color: rgba(white, 0.75);
	}
}

.faq__bold {
	font-weight: 600 !important;
}

.faq__italic {
	font-style: italic !important;
}

.faq__highlight {
	color: $blue-light !important;
}

.faq__indent {
	margin-left: 1em !important;
}

.mobileView {
	position: static;
	top: 0;
	left: 0;
	z-index: 500;
	height: 100vh;
	width: 100vw;
	max-height: 100vh;
	max-width: 100vw;
	overflow: hidden;
	background: $lightest;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	padding: 10vh 5vw;
	* {
		text-align: center;
	}
	a {
		font-size: inherit;
		color: $logo-mid;
		font-weight: 600;
		text-decoration: underline;
	}
	b {
		font-weight: 700;
		font-size: inherit;
		color: inherit;
	}
	em {
		font-style: italic;
		font-weight: inherit;
		font-size: inherit;
		color: inherit;
	}
	h1 {
		font-weight: 600;
		font-size: 8vw;
		line-height: 1.1em;
		margin-bottom: 4vh;
		color: $logo-mid;
	}
	h2 {
		font-size: 4vw;
		font-weight: 500;
		margin-bottom: 2vh;
	}
	h3 {
		font-size: 3vw;
		font-weight: 500;
	}
	img {
		margin-top: -35vh;
		margin-bottom: -60vh;
		width: 200%;
		pointer-events: none;
	}
}
