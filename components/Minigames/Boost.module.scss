@import "/styles/variables";

.boost {
	height: 100vh;
	width: 100vw;
	display: flex;
	flex-direction: row;
	align-items: flex-start;
	justify-content: flex-start;
	background: $darker;
	position: relative;
	overflow: hidden;
}

.game {
	height: 100%;
	flex: 1 1 0;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.flowWrapper {
	height: 65vh;
	width: 70vw;
	overflow: hidden;
	position: relative;
	border-top: thin solid;
	border-bottom: thin solid;
	padding: 8px;
	&::before,
	&::after {
		content: "";
		position: absolute;
		width: 20vw;
		height: 0;
		left: 50%;
		transform: translateX(-50%);
	}
	&::before {
		border-bottom: 8px solid;
		border-left: 8px solid transparent !important;
		border-right: 8px solid transparent !important;
		top: 0;
	}
	&::after {
		border-top: 8px solid;
		border-left: 8px solid transparent !important;
		border-right: 8px solid transparent !important;
	}
}

.questionWrapper {
	margin-top: 5vh;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	padding: 0 2vw;
	position: relative;
	* {
		font-family: $jetbrains;
	}
}

.question {
	margin: 2vh 0.5rem;
	color: white;
	text-transform: uppercase;
	font-weight: 400;
	letter-spacing: 0.1em;
	font-size: 1rem;
	text-align: center;
}

.choiceContainer {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	position: relative;
}

.choice {
	flex: 1 1 0;
	min-width: 150px;
	max-width: 350px;
	margin: 2vh 1vw;
	font-weight: 700;
	text-transform: uppercase;
	position: relative;
	transition: background-color 0.1s ease-out;
	p {
		padding: 2vh 0.5vw;
		height: 100%;
		width: 100%;
		pointer-events: none;
		overflow: hidden;
		position: relative;
		display: flex;
		justify-content: center;
		align-items: center;
		&::after {
			content: attr(datachoice);
			color: white;
			z-index: 1;
			overflow-wrap: anywhere;
		}
		&::before {
			content: "";
			position: absolute;
			top: 0;
			left: -2vw;
			height: 100%;
			width: 0;
			opacity: 0;
			transform: skew(-20deg);
			transition: opacity 0.1s ease-out, width 0.1s ease-out 0.1s;
		}
	}
	&::after {
		content: "";
		position: absolute;
		top: -4px;
		left: -4px;
		height: calc(100% + 6px);
		width: calc(100% + 6px);
		border: thin solid rgba(white, 0.5);
		transition: box-shadow 0.1s ease-out, border-color 0.1s ease-out;
	}
	&:hover {
		border-color: white;
		p::before {
			width: calc(100% + 4vw);
			opacity: 1;
			transition: width 0.2s ease-out;
		}
		&::after {
			border-color: white;
			box-shadow: 0 0 8px rgba(white, 0.75), inset 0 0 8px rgba(white, 0.75);
		}
	}
}

.questionWrapper.correctChoice {
	.question {
		color: $green-mid;
	}
	.choiceContainer {
		&::before,
		&::after {
			background: $green-mid;
		}
		&::before {
			border-color: $green-mid;
		}
		&::after {
			border-color: $green-mid;
		}
		.choice.answer {
			background: $green-mid;
			&::after {
				border-color: $green-mid;
			}
		}
		.choice.notAnswer {
			background: rgba(white, 0.1);
			opacity: 0.5;
			&::after {
				border-color: transparent;
			}
		}
	}
}

.questionWrapper.incorrectChoice {
	.question {
		color: $red;
	}
	.choiceContainer {
		&::before,
		&::after {
			background: $red;
		}
		&::before {
			border-color: $red;
		}
		&::after {
			border-color: $red;
		}
		.choice.answer {
			background: white;
			p::after {
				color: $darkest;
			}
			&::after {
				border-color: white;
			}
		}
		.choice.notAnswer {
			background: rgba(white, 0.1);
			opacity: 0.5;
			&::after {
				border-color: transparent;
			}
		}
		.choice.notAnswer.incorrectResponse {
			background: $red;
			&::after {
				border-color: transparent;
			}
		}
	}
}

.questionWrapper.flashing {
	pointer-events: none;
}

.leftMenu {
	height: 100%;
	width: 15vw;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	justify-content: flex-start;
	transition: width 0.2s ease-out;
	position: relative;
	z-index: 1;
}

.leftMenu.histExpanded {
	width: 30vw;
}

.histWrapper {
	width: 100%;
	flex: 1 1 0;
	display: flex;
	flex-direction: column;
	overflow-y: auto;
	position: relative;
	background: rgba(black, 0.1);
	* {
		font-family: $jetbrains;
	}
	&::-webkit-scrollbar {
		display: none;
	}
}

.hoverArea {
	position: fixed;
	top: 0;
	left: 0;
	height: 100%;
	width: 15vw;
}

.buttonContainer {
	width: 100%;
	display: flex;
}

.button {
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: flex-start;
	padding: 0.75rem 0.75vw;
	border-right: thin solid rgba(white, 0.1);
	color: rgba(white, 0.75);
	font-size: calc(0.4rem + 0.4vw);
	font-family: $jetbrains;
	text-transform: uppercase;
	letter-spacing: 0.1em;
	position: relative;
	overflow: hidden;
	transition: color 0.1s ease-out, background-color 0.1s ease-out, letter-spacing 0.1s ease-out;
	span {
		color: rgba(white, 0.75);
		font-size: 1vw;
		margin-right: 0.5vw;
		transition: transform 0.1s ease-out, color 0.1s ease-out;
	}
	&::after {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
		background: linear-gradient(to right, white 3px, transparent 3px) 0 0, linear-gradient(to right, white 3px, transparent 3px) 0 100%, linear-gradient(to left, white 3px, transparent 3px) 100% 0,
			linear-gradient(to left, white 3px, transparent 3px) 100% 100%;
		background-repeat: no-repeat;
		background-size: 3px 3px;
		opacity: 0;
		pointer-events: none;
		transition: opacity 0.1s ease-out;
	}
	&:hover {
		color: white;
		span {
			color: white;
		}
		&::after {
			opacity: 100%;
		}
	}
}

.lockHist {
	&:hover {
		letter-spacing: 0.3em;
	}
	&.histExpanded {
		letter-spacing: 0.3em;
		background: $darkest;
		&:hover {
			letter-spacing: 0.1em;
		}
	}
}

.back:hover span {
	transform: translateX(-2px);
}

.levels:hover span {
	transform: rotate(90deg);
}

.volume {
	flex: 0 0 3rem;
	max-width: 3rem;
	min-width: 3rem;
	padding: 0;
	position: relative;
	overflow: visible;
	&:hover {
		background: $darkest;
	}
	&::after {
		background: linear-gradient(to right, white 3px, transparent 3px) 0 100%, linear-gradient(to left, white 3px, transparent 3px) 100% 100%;
		background-repeat: no-repeat;
		background-size: 3px 3px;
	}
	.volumeIcon {
		padding: 0.75rem 0;
		width: 100%;
		display: flex;
		justify-content: center;
		align-items: center;
	}
	span {
		margin: 0;
		width: calc(1vw + 0.3rem);
		color: rgba(white, 0.75);
	}
	.sliderWrapper {
		background: $darkest;
		opacity: 0;
		pointer-events: none;
		position: absolute;
		top: 0px;
		left: calc(50% + 1px);
		height: 3rem;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 0 0.75rem 0 0.5rem;
		transform: rotate(-90deg) translate(0, -50%);
		transform-origin: left top;
		cursor: default;
		transition: opacity 0.1s ease-out;
		.slider {
			-webkit-appearance: none;
			appearance: none;
			height: 2px;
			width: 8rem;
			cursor: pointer;
			outline: none;
			&::-webkit-slider-thumb {
				-webkit-appearance: none;
				appearance: none;
				width: 14px;
				height: 14px;
				transform: rotate(45deg);
				padding: 5px;
				border: thin solid white;
				box-shadow: inset 0 0 0 40px;
				cursor: ns-resize;
			}
			&::-moz-range-thumb {
				width: 14px;
				height: 14px;
				transform: rotate(45deg);
				border: thin solid;
				box-shadow: inset 0 0 0 1px white;
				cursor: ns-resize;
			}
		}
		&::before,
		&::after {
			content: "";
			position: absolute;
			top: 0;
			height: 3px;
			width: 3px;
			background: white;
			right: 0;
		}
		&::after {
			top: auto;
			right: 0;
			bottom: 0;
		}
	}
	&:hover .sliderWrapper {
		opacity: 1;
		pointer-events: auto;
	}
	&:hover svg {
		color: white;
	}
}

.h1 {
	position: absolute;
	top: 50%;
	height: 1px;
	width: 1px;
	right: 2vw;
	transform: rotate(90deg) translateY(-50%);
	display: flex;
	align-items: center;
	justify-content: center;
	span {
		text-transform: uppercase;
		font-size: 15vh;
		font-family: $jetbrains;
	}
	.fill {
		color: transparent;
		-webkit-text-stroke-width: 0.5px;
		-webkit-text-stroke-color: white;
		letter-spacing: -0.1em;
		opacity: 0.1;
	}
	.stroke {
		color: white;
		opacity: 0.05;
	}
}

.boost.comparison {
	.flowWrapper,
	.flowWrapper::before,
	.flowWrapper::after {
		border-color: #fe757e;
	}
	.choice {
		background: #fe757e;
		p::before {
			background: #ec505b;
		}
	}
	.volume .sliderWrapper .slider {
		&::-webkit-slider-thumb {
			color: #fe757e;
		}
		&::-moz-range-thumb {
			border-color: #fe757e;
			background: #fe757e;
		}
	}
}

.boost.conditional {
	.flowWrapper,
	.flowWrapper::before,
	.flowWrapper::after {
		border-color: #ff6bcd;
	}
	.choice {
		background: #ff6bcd;
		p::before {
			background: #f051bb;
		}
	}
	.volume .sliderWrapper .slider {
		&::-webkit-slider-thumb {
			color: #ff6bcd;
		}
		&::-moz-range-thumb {
			border-color: #ff6bcd;
			background: #ff6bcd;
		}
	}
}

@media only screen and (max-width: 1200px) {
	.questionWrapper {
		margin-top: 2vh;
	}
	.question {
		margin: 1vh 0;
	}
	.choiceContainer {
		padding: 0 5vw;
	}
	.choiceContainer::before,
	.choiceContainer::after {
		display: none;
	}
	.choice {
		flex: 1 1 40%;
		margin: 1.5vh 1vw;
	}
}
